{"version":3,"sources":["images/background.jpg","components/Landing/Landing.styles.js","store/reducer.js","store/store.js","components/Landing/Header/LandingHeader.styles.js","store/actions.js","components/common/commonUIKit.js","components/Landing/Information/Information.styles.js","components/Landing/Header/ProfileDropdown/ProfileDropdown.styles.js","components/Landing/Jumbotron/Jumbotron.styles.js","images/steps-profile.png","images/steps-search.png","images/steps-handshake.png","images/petsitter.jpg","components/Footer/Footer.styles.js","components/Landing/Landing.js","components/SearchSitter/SearchSitter.styles.js","components/SearchSitter/Header/SearchSitterHeader.styles.js","components/common/Spinner.js","components/SearchSitter/Header/ProfileDropdown/ProfileDropdown.styles.js","components/Modal/Modal.styles.js","components/Auth/Auth.styles.js","components/Inbox/Header/InboxHeader.styles.js","components/Auth/Login/LoginSchema.js","components/Auth/SignUp/SignUpSchema.js","components/Inbox/Inbox.styles.js","components/ProfileForm/Header/ProfileFormHeader.styles.js","components/Inbox/Header/ProfileDropdown/ProfileDropdown.styles.js","App.styles.js","components/ProfileForm/Header/ProfileDropdown/ProfileDropdown.styles.js","components/ProfileForm/PersonalInfo/PersonalInfo.styles.js","components/ProfileForm/PersonalInfo/PersonalInfoSchema.js","components/ProfileForm/SitterInfo/SitterInfo.styles.js","components/ProfileForm/Profile.styles.js","App.js","index.js"],"names":["styled","div","background","reducer","state","action","type","user","payload","loggedIn","initialState","isModalOpen","accessToken","StoreContext","createContext","Store","children","value","useReducer","Provider","Button","props","profileOpen","hamburgerOpen","h1","FontAwesomeIcon","HamburgerSpin","button","generalDispatchBundler","i","span","CustomerQuote","section","p","a","h3","img","h2","strong","footer","h5","input","Landing","MapLocationSitter","showMap","map","h4","b","showMoreFilter","className","icon","faChevronUp","faChevronDown","Select","TextField","Link","size","faTimes","spin","keyframes","custom","isLoginOpen","selected","form","error","Yup","shape","email","required","password","name","surname","min","address","city","zip","max","profilePicture","App","useContext","dispatch","useState","setAutoLoginAttempted","useEffect","autoLogin","fetch","process","credentials","response","ok","text","json","data","actions","setInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d3f7b1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.99ad8523.jpg\";","import styled from \"styled-components\";\r\nimport background from \"../../images/background.jpg\";\r\n\r\nexport const StyledBackground = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  min-height: 620px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-image: url(${background});\r\n`;\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"USER\":\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        loggedIn: action.payload,\r\n      };\r\n\r\n    case \"GENERAL_BUNDLE\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { useReducer, createContext } from \"react\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  loggedIn: false,\r\n  isModalOpen: false,\r\n  accessToken: null,\r\n};\r\nexport const StoreContext = createContext();\r\n\r\nconst Store = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","import styled from \"styled-components\";\r\nimport { HamburgerSpin } from \"react-animated-burgers\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Navbar = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-areas: \"brand nav\";\r\n  grid-template-columns: 200px auto;\r\n  justify-items: center;\r\n  @media (max-width: 800px) {\r\n    padding: 10px 5px 5px 5px;\r\n\r\n    grid-template-areas:\r\n      \"brand menu\"\r\n      \"nav nav\";\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n  grid-area: nav;\r\n  display: grid;\r\n  width: 100%;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 120px 120px 1fr 120px 120px;\r\n  padding-right: 20px;\r\n  @media (max-width: 800px) {\r\n    height: ${(props) =>\r\n      props.profileOpen && props.hamburgerOpen\r\n        ? \"280px\"\r\n        : props.hamburgerOpen && !props.profileOpen\r\n        ? \"170px\"\r\n        : \"0px\"};\r\n    overflow: hidden;\r\n    transition: height ease-in-out 0.6s;\r\n    grid-template-columns: none;\r\n    grid-template-rows: repeat(4, 30px);\r\n    padding-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.div`\r\n  grid-area: menu;\r\n  display: none;\r\n  color: white;\r\n  @media (max-width: 800px) {\r\n    display: block;\r\n    justify-self: end;\r\n    margin-top: -8px;\r\n  }\r\n`;\r\n\r\nexport const Brand = styled.h1`\r\n  grid-area: brand;\r\n  font-size: 2rem;\r\n  color: white;\r\n  margin: 0px;\r\n  @media (max-width: 800px) {\r\n    grid-area: brand;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport const StyledBurgerSpin = styled(HamburgerSpin)`\r\n  outline: none;\r\n`;\r\n\r\nexport const EmptyDiv = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: inherit;\r\n  color: white;\r\n  width: 100%;\r\n  background-color: Transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 1.1rem;\r\n  height: 45px;\r\n  border: white 2px solid;\r\n\r\n  border-radius: 5px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n\r\n  @media (max-width: 800px) {\r\n    height: 35px;\r\n    font-size: 1rem;\r\n  }\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ExpandIcon = styled.i`\r\n  padding-left: 8px;\r\n`;\r\n","export const changeLoggedIn = (loggedIn) => {\r\n  return {\r\n    type: \"LOGGED_IN\",\r\n    payload: loggedIn,\r\n  };\r\n};\r\n\r\nexport const logUserIn = (user) => {\r\n  return {\r\n    type: \"USER\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const generalDispatchBundler = (payload) => {\r\n  return {\r\n    type: \"GENERAL_BUNDLE\",\r\n    payload,\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const NameWrapper = styled.span`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  width: 70%;\r\n  display: inline-block;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const NameDropdownIcon = styled(FontAwesomeIcon)`\r\n  padding-bottom: 3px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const InformationWrapper = styled.div`\r\n  width: 100vw;\r\n  min-width: 280px;\r\n  margin: 50px auto 0px auto;\r\n  display: grid;\r\n  justify-items: center;\r\n  background-color: FFFFF;\r\n  @media (max-width: 340px) {\r\n    margin: 50px 0px 0px 0px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: rgb(100, 100, 105);\r\n  font-size: 3rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  @media (max-width: 420px) {\r\n    font-size: 1.7rem;\r\n  }\r\n  @media (min-width: 420px) and (max-width: 600px) {\r\n    font-size: 2rem;\r\n  }\r\n  @media (min-width: 600px) and (max-width: 750px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nexport const StepWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  margin: 50px 0px;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  width: 80%;\r\n  @media (max-width: 950px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Step = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StepNumber = styled.h3`\r\n  color: #28a55f;\r\n`;\r\n\r\nexport const StepImage = styled.img`\r\n  @media (min-width: 950px) and (max-width: 1200px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const StepTitle = styled.h2`\r\n  margin: 0px;\r\n  color: rgb(100, 100, 105);\r\n  line-height: 1.5;\r\n  text-align: center;\r\n`;\r\n\r\nexport const StepParagraph = styled.p`\r\n  color: rgb(100, 100, 105);\r\n  font-size: 20px;\r\n\r\n  @media (max-width: 950px) {\r\n    width: 100%;\r\n  }\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const CustomerWrap = styled.div`\r\n  width: 60%;\r\n  min-width: 280px;\r\n\r\n  margin: 100px 0px 40px 0px;\r\n  position: relative;\r\n  @media (max-width: 1100px) {\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport const CustomerImage = styled.img`\r\n  width: 100%;\r\n  min-width: 280px;\r\n`;\r\n\r\nexport const CustomerQuoteWrap = styled.div`\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: -50px;\r\n  left: 50px;\r\n  width: 370px;\r\n  min-width: 280px;\r\n  height: 220px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  border: 1px solid #e5e5e5;\r\n  line-height: 2;\r\n  border-radius: 5px;\r\n  @media (max-width: 760px) {\r\n    width: 100vw;\r\n    height: 140px;\r\n    left: 0px;\r\n    top: -100px;\r\n  }\r\n  @media (min-width: 500px) and (max-width: 616px) {\r\n    height: 120px;\r\n    top: -100px;\r\n  }\r\n  @media (min-width: 400px) and (max-width: 500px) {\r\n    height: 150px;\r\n  }\r\n  @media (max-width: 512px) {\r\n    top: -120px;\r\n  }\r\n`;\r\n\r\nexport const CustomerQuote = styled.span`\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  @media (min-width: 400px) and (max-width: 616px) {\r\n    font-size: 18px;\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const CustomerName = styled(CustomerQuote)`\r\n  color: rgb(102, 114, 124);\r\n`;\r\n\r\nexport const GreenLine = styled.div`\r\n  width: 30px;\r\n  height: 2px;\r\n  background-color: #28a55f;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const SitterName = styled.span`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  padding: 7px;\r\n  position: absolute;\r\n  bottom: 25px;\r\n  right: 30px;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Strong = styled.strong``;\r\n\r\nexport const InformationParagraph = styled.p`\r\n  font-size: 1.2rem;\r\n  color: rgb(100, 100, 105);\r\n  margin: 5px 0px 100px 0px;\r\n  width: 70%;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  height: 250px;\r\n  width: 100vw;\r\n  background: rgb(53, 58, 64);\r\n`;\r\n\r\nexport const InformationTitle = styled.h1`\r\n  color: rgb(100, 100, 105);\r\n  font-size: 2rem;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../LandingHeader.styles\";\r\n\r\nexport const DropdownWrapper = styled.div`\r\n  height: ${(props) => (props.profileOpen ? \"190px\" : \"0px\")};\r\n  display: grid;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 48px;\r\n  outline: none;\r\n  z-index: 10;\r\n  grid-auto-rows: 42px;\r\n  transition: height ease-in-out 0.6s;\r\n  overflow: hidden;\r\n\r\n  grid-gap: 5px;\r\n  @media (max-width: 800px) {\r\n    width: 100%;\r\n    top: 40px;\r\n    grid-auto-rows: 35px;\r\n  }\r\n`;\r\n\r\nexport const ProfileButton = styled(Button)`\r\n  @media (max-width: 800px) {\r\n    background: #28a55f;\r\n    &:hover {\r\n      background-color: #28a55f;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  width: 60%;\r\n  margin: 120px auto 0px auto;\r\n  @media (max-width: 800px) {\r\n    width: 80%;\r\n    margin: 50px auto 0px auto;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3rem;\r\n  color: white;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  @media (max-width: 800px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  font-size: 1.4rem;\r\n  color: white;\r\n  @media (max-width: 800px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: none;\r\n  color: white;\r\n  width: 170px;\r\n  height: 50px;\r\n  font-size: 1.3rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: 1px solid white;\r\n  &:hover {\r\n    color: black;\r\n    background: white;\r\n  }\r\n  @media (max-width: 800px) {\r\n    width: 140px;\r\n    height: 40px;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  color: white;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n  font-size: 1rem;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/steps-profile.7c0ea130.png\";","export default __webpack_public_path__ + \"static/media/steps-search.268e2620.png\";","export default __webpack_public_path__ + \"static/media/steps-handshake.5306cbf9.png\";","export default __webpack_public_path__ + \"static/media/petsitter.ae3c789e.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const FooterWrap = styled.footer`\r\n  width: 100vw;\r\n  min-width: 280px;\r\n  background: rgb(64, 72, 79);\r\n`;\r\n\r\nexport const GridWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 300px;\r\n  justify-items: center;\r\n  width: 60%;\r\n  padding: 15px 30px 60px 15px;\r\n  margin: 0 auto;\r\n\r\n  grid-gap: 10px;\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    justify-items: start;\r\n    width: 80%;\r\n  }\r\n  @media (max-width: 560px) {\r\n    grid-template-columns: 100px 250px;\r\n    margin: 0;\r\n  }\r\n  @media (max-width: 442px) {\r\n    grid-template-columns: 1fr 2fr;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Contact = styled.div`\r\n  @media (max-width: 560px) {\r\n    grid-column: 1 / span 2;\r\n  }\r\n`;\r\n\r\nexport const Menu = styled.div``;\r\n\r\nexport const RecentPosts = styled.div``;\r\n\r\nexport const NewsLetter = styled.div`\r\n  @media (max-width: 560px) {\r\n    grid-column: 1 / span 2;\r\n  }\r\n`;\r\n\r\nexport const FooterTitle = styled.h5`\r\n  color: white;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const FooterText = styled.span`\r\n  color: rgb(169, 169, 169);\r\n`;\r\n\r\nexport const FooterLink = styled.a`\r\n  color: rgb(169, 169, 169);\r\n  display: block;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const NewsLetterInput = styled.input`\r\n  background: white;\r\n  border: none;\r\n  outline: none;\r\n  width: 140px;\r\n  height: 35px;\r\n  padding: 0px 0px 0px 10px;\r\n`;\r\n\r\nexport const NewsLetterButton = styled.button`\r\n  background: #28a55f;\r\n  color: white;\r\n  height: 35px;\r\n  outline: none;\r\n  border: none;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SocialMediaWrap = styled.div``;\r\n\r\nexport const SocialMediaImage = styled.img`\r\n  width: 30px;\r\n  margin: 5px 5px 0px 0px;\r\n`;\r\n\r\nexport const Copyright = styled.p`\r\n  color: white;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 0px;\r\n`;\r\n\r\nexport const Link = styled.a``;\r\n","import { Fragment } from \"react\";\r\nimport * as S from \"./Landing.styles\";\r\nimport LandingHeader from \"./Header/LandingHeader\";\r\nimport Jumbotron from \"./Jumbotron/Jumbotron\";\r\nimport Information from \"./Information/Information\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nfunction Landing() {\r\n  return (\r\n    <Fragment>\r\n      <S.StyledBackground>\r\n        <LandingHeader />\r\n        <Jumbotron />\r\n      </S.StyledBackground>\r\n      <Information />\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  faChevronUp,\r\n  faChevronDown,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ContentWrap = styled.div`\r\n  height: calc(100vh - 65px);\r\n  padding-top: 65px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  @media (max-width: 800px) {\r\n    height: calc(100vh - 60px);\r\n    padding-top: 60px;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const ProfilesWrap = styled.div`\r\n  overflow-y: scroll;\r\n  @media (max-width: 800px) {\r\n    display: ${({ showMap }) => (showMap ? \"none\" : \"block\")};\r\n  }\r\n`;\r\n\r\nexport const LeafletMap = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: ${({ showMap }) => (showMap ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  width: 100%;\r\n  padding: 15px;\r\n  display: grid;\r\n  grid-template-columns: 175px 5fr 1fr;\r\n  grid-gap: 15px;\r\n  box-sizing: border-box;\r\n  box-shadow: 0 4px 2px -2px rgb(0 0 0 / 20%);\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 3fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const ProfileImage = styled.img`\r\n  width: 100%;\r\n  height: 175px;\r\n  object-fit: cover;\r\n  border-radius: ${({ map }) => (map ? \"5px 5px 0px 0px\" : \"0px\")};\r\n\r\n  @media (max-width: 500px) {\r\n    grid-column: 1 / span2;\r\n    width: 250px;\r\n    justify-self: center;\r\n  }\r\n`;\r\n\r\nexport const ProfileDetails = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto auto auto;\r\n`;\r\n\r\nexport const ProfileName = styled.h4`\r\n  color: rgb(2, 129, 162);\r\n  font-size: ${({ map }) => (map ? \"16px\" : \"26px\")};\r\n  margin: 0px;\r\n`;\r\n\r\nexport const ProfileHeadline = styled.b`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const ProfileAddress = styled.b`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const ProfilePrice = styled.div`\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nexport const ProfileComment = styled.span``;\r\n\r\nexport const ProfileNumber = styled.span`\r\n  font-size: ${({ map }) => (map ? \"16px\" : \"26px\")};\r\n\r\n  font-weight: 600;\r\n  color: black;\r\n  padding-right: 0.25em;\r\n`;\r\n\r\nexport const PriceText = styled.b`\r\n  display: block;\r\n  font-size: 15px;\r\n  color: rgb(102, 114, 124);\r\n`;\r\n\r\nexport const Rate = styled.span`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: rgb(204, 78, 0);\r\n`;\r\n\r\nexport const FilterWrap = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 50px 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nexport const FilterTitle = styled.h2`\r\n  margin: 0px;\r\n`;\r\n\r\nexport const FilterPriceWrap = styled.div``;\r\n\r\nexport const FilterPriceRangeWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nexport const FilterPriceRangeLow = styled.b`\r\n  font-size: 1.2rem;\r\n  justify-self: left;\r\n`;\r\n\r\nexport const FilterPriceRangeHigh = styled.b`\r\n  font-size: 1.2rem;\r\n  justify-self: right;\r\n`;\r\n\r\nexport const StyledIcon = styled((props) => {\r\n  const { showMoreFilter, className } = props;\r\n  return (\r\n    <FontAwesomeIcon\r\n      className={className}\r\n      icon={showMoreFilter ? faChevronUp : faChevronDown}\r\n    />\r\n  );\r\n})`\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport const More = styled.b`\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  color: rgb(20, 85, 94);\r\n`;\r\n\r\nexport const FilterText = styled.b``;\r\n\r\nexport const FilterGroupWrap = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nexport const FilterContentWrap = styled.div`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)``;\r\n\r\nexport const StyledText = styled(TextField)``;\r\n\r\nexport const FilterMapToggleButton = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  grid-template-columns: 100px 100px;\r\n  left: 50%;\r\n  bottom: 125px;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1010;\r\n\r\n  @media (min-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MapButton = styled(Button)`\r\n  &&& {\r\n    border-top-right-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n  }\r\n`;\r\n\r\nexport const FilterButton = styled(Button)`\r\n  &&& {\r\n    border-top-left-radius: 0px;\r\n    border-bottom-left-radius: 0px;\r\n  }\r\n`;\r\n\r\nexport const MapLocationSitter = styled.div`\r\n  border-radius: 50%;\r\n  background-color: rgb(2, 129, 162);\r\n\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  color: white;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport const MapLocationSitterArrow = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border: 8px solid transparent;\r\n  border-top: 0;\r\n  border-bottom: 15px solid rgb(2, 129, 162);\r\n  transform: rotate(180deg);\r\n  top: 20px;\r\n  left: 5px;\r\n  position: absolute;\r\n  ${MapLocationSitter}:hover & {\r\n    border-bottom-color: black;\r\n  }\r\n`;\r\n\r\nexport const MapPopUp = styled.div`\r\n  width: 200px;\r\n  background-color: white;\r\n  position: absolute;\r\n  top: -225px;\r\n  z-index: 2;\r\n  border-radius: 5px;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MapPopUpSitterWrap = styled.div`\r\n  margin: 10px 15px 10px 10px;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nexport const NoSitterWrap = styled.div`\r\n  margin-top: 100px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const NoSitterTitle = styled.h2``;\r\n\r\nexport const NoSitterText = styled.span``;\r\n\r\nexport const LinkToSitter = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const LinkToSitterMap = styled(Link)`\r\n  color: white;\r\n`;\r\n\r\nexport const MapProfileImage = styled.img`\r\n  width: 100%;\r\n  height: 175px;\r\n  object-fit: cover;\r\n  border-radius: ${({ map }) => (map ? \"5px 5px 0px 0px\" : \"0px\")};\r\n`;\r\n\r\nexport const MapPriceBoldText = styled.b`\r\n  color: black;\r\n  font-size: 16px;\r\n  margin: 0px;\r\n  justify-self: end;\r\n`;\r\n\r\nexport const MapPopUpCancel = styled((props) => {\r\n  return <FontAwesomeIcon size=\"2x\" icon={faTimes} {...props} />;\r\n})`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  cursor: pointer;\r\n  background-color: red;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  padding: 5px;\r\n  height: 15px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { HamburgerSpin } from \"react-animated-burgers\";\r\n\r\nexport const Navbar = styled.div`\r\n  padding: 10px;\r\n  display: grid;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  grid-template-areas: \"brand nav\";\r\n  grid-template-columns: 200px auto;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  background-color: white;\r\n  box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2);\r\n  z-index: 1002;\r\n\r\n  box-sizing: border-box;\r\n  @media (max-width: 800px) {\r\n    padding: 0px;\r\n    grid-template-areas:\r\n      \"brand menu\"\r\n      \"nav nav\";\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n  grid-area: nav;\r\n  display: grid;\r\n  width: 100%;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 120px 120px 1fr 120px 120px;\r\n  @media (max-width: 800px) {\r\n    height: ${(props) =>\r\n      props.profileOpen && props.hamburgerOpen\r\n        ? \"280px\"\r\n        : props.hamburgerOpen && !props.profileOpen\r\n        ? \"160px\"\r\n        : \"0px\"};\r\n    overflow: hidden;\r\n    transition: height ease-in-out 0.6s;\r\n    grid-template-columns: none;\r\n    grid-template-rows: repeat(4, 30px);\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.div`\r\n  grid-area: menu;\r\n  display: none;\r\n  @media (max-width: 800px) {\r\n    display: block;\r\n    justify-self: end;\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport const StyledBurgerSpin = styled(HamburgerSpin)`\r\n  outline: none;\r\n`;\r\n\r\nexport const BrandLink = styled(Link)`\r\n  grid-area: brand;\r\n  font-size: 2rem;\r\n  color: #484847;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  @media (max-width: 800px) {\r\n    grid-area: brand;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const EmptyDiv = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: inherit;\r\n  color: #484847;\r\n  width: 100%;\r\n  background: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  height: 45px;\r\n  border: #484847 2px solid;\r\n  border-radius: 5px;\r\n  border-radius: 5px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n\r\n  @media (max-width: 800px) {\r\n    height: 35px;\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n  }\r\n`;\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ExpandIcon = styled.i`\r\n  padding-left: 8px;\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid rgb(20, 169, 109);\r\n  width: 120px;\r\n  height: 120px;\r\n  animation: ${spin} 2s linear infinite;\r\n  margin: 0px auto;\r\n  ${({ custom }) => custom}\r\n`;\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../SearchSitterHeader.styles\";\r\n\r\nexport const DropdownWrapper = styled.div`\r\n  height: ${(props) => (props.profileOpen ? \"190px\" : \"0px\")};\r\n  display: grid;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 48px;\r\n  outline: none;\r\n  grid-auto-rows: 42px;\r\n  transition: height ease-in-out 0.6s;\r\n  overflow: hidden;\r\n\r\n  grid-gap: 5px;\r\n  @media (max-width: 800px) {\r\n    width: 100%;\r\n    top: 40px;\r\n    grid-auto-rows: 35px;\r\n  }\r\n`;\r\n\r\nexport const ProfileButton = styled(Button)`\r\n  @media (max-width: 800px) {\r\n    background: white;\r\n    color: #484847;\r\n\r\n    &:hover {\r\n      background-color: #28a55f;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\"; // can i * as icon? performance?\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const ModalWrap = styled.div`\r\n  z-index: 1015;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80%;\r\n  max-width: 400px;\r\n  background: white;\r\n  box-shadow: 0 2px 8px r gba(0, 0, 0, 0.26);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100vw;\r\n    max-width: 100vw;\r\n    max-height: 90%;\r\n    overflow-y: scroll;\r\n    box-sizing: border-box;\r\n\r\n    overflow-y: scroll;\r\n  }\r\n`;\r\n\r\nexport const GrayBackdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.75);\r\n  z-index: 1011;\r\n`;\r\n\r\nexport const ModalCancel = styled((props) => (\r\n  <FontAwesomeIcon size=\"2x\" icon={faTimes} {...props} />\r\n))`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrap = styled.div`\r\n  background-color: #e9ebed;\r\n  height: 100vh;\r\n  min-width: 280px;\r\n  display: grid;\r\n`;\r\n\r\nexport const BrandLink = styled(Link)`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  @media (max-width: 800px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const BrandWrap = styled.div`\r\n  text-align: center;\r\n  background-color: white;\r\n  padding: 20px 0px;\r\n  height: 40px;\r\n`;\r\n\r\nexport const AuthWrap = styled.div`\r\n  display: grid;\r\n  width: 400px;\r\n  height: ${(props) => (props.isLoginOpen ? \"300px\" : \"400px\")};\r\n  justify-self: center;\r\n  margin: 50px 0px;\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const TabWrap = styled.div`\r\n  width: 90%;\r\n  justify-self: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  background-color: white;\r\n`;\r\nexport const TabText = styled.h3`\r\n  text-align: center;\r\n  font-weight: 400;\r\n  padding-top: 8px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  border: ${(props) => (props.selected ? `1px solid black` : `none`)};\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: grid;\r\n  width: 90%;\r\n  margin: 10px auto 30px auto;\r\n  grid-gap: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid ${(props) => (props.error ? \"red\" : \"#cfcfcf\")};\r\n  outline: 0;\r\n  height: 16px;\r\n  padding: 0.8em 0 10px 0.8em;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  background-color: #28a55f;\r\n  border: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  height: 35px;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  font-size: 0.9em;\r\n`;\r\n\r\nexport const ErrorText = styled.span`\r\n  color: red;\r\n  font-size: 0.9rem;\r\n  text-align: left;\r\n  position: relative;\r\n  top: 2px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { HamburgerSpin } from \"react-animated-burgers\";\r\n\r\nexport const Navbar = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  padding: 10px;\r\n  display: grid;\r\n  position: fixed;\r\n  width: 100%;\r\n  grid-template-areas: \"brand nav\";\r\n  grid-template-columns: 200px auto;\r\n  justify-items: center;\r\n  background-color: white;\r\n  z-index: 5;\r\n  box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2);\r\n\r\n  box-sizing: border-box;\r\n  @media (max-width: 800px) {\r\n    padding: 10px 0px 0px 0px;\r\n    grid-template-areas:\r\n      \"brand menu\"\r\n      \"nav nav\";\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n  grid-area: nav;\r\n  background-color: white;\r\n  display: grid;\r\n  width: 100%;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 130px 120px 1fr 120px 120px;\r\n  padding-right: 20px;\r\n  @media (max-width: 800px) {\r\n    height: ${(props) =>\r\n      props.profileOpen && props.hamburgerOpen\r\n        ? \"240px\"\r\n        : props.hamburgerOpen && !props.profileOpen\r\n        ? \"160px\"\r\n        : \"0px\"};\r\n    overflow: hidden;\r\n    transition: height ease-in-out 0.6s;\r\n    grid-template-columns: none;\r\n    grid-template-rows: repeat(4, 30px);\r\n    padding-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.div`\r\n  grid-area: menu;\r\n  display: none;\r\n  @media (max-width: 800px) {\r\n    display: block;\r\n    justify-self: end;\r\n    margin-top: -8px;\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport const StyledBurgerSpin = styled(HamburgerSpin)`\r\n  outline: none;\r\n`;\r\n\r\nexport const BrandLink = styled(Link)`\r\n  grid-area: brand;\r\n  font-size: 2rem;\r\n  color: #484847;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  @media (max-width: 800px) {\r\n    grid-area: brand;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const EmptyDiv = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: inherit;\r\n  color: #484847;\r\n  width: 100%;\r\n  background: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  height: 45px;\r\n  border: #484847 2px solid;\r\n  border-radius: 5px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n\r\n  @media (max-width: 800px) {\r\n    height: 35px;\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n  }\r\n`;\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ExpandIcon = styled.i`\r\n  padding-left: 8px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { StoreContext } from \"../../../store/store\";\r\nimport { useQuery } from \"../../../utils/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nexport default (setErrorFromServer) => {\r\n  const [_, dispatch] = useContext(StoreContext);\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  return useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        let response = await fetch(\r\n          `${process.env.REACT_APP_SERVER_URL}/api/login`,\r\n          {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.status != 200) {\r\n          throw await response.text();\r\n        }\r\n\r\n        let data = await response.json();\r\n\r\n        dispatch(\r\n          actions.generalDispatchBundler({\r\n            user: data.user,\r\n            loggedIn: true,\r\n            accessToken: data.accessToken,\r\n          })\r\n        );\r\n\r\n        history.push(query.get(\"next\"));\r\n      } catch (e) {\r\n        setErrorFromServer(\"Failed to login\");\r\n        resetForm();\r\n      }\r\n    },\r\n  });\r\n};\r\n","import { useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { StoreContext } from \"../../../store/store\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"../../../utils/hooks\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Please enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  name: Yup.string().required(\"First name is required\"),\r\n  surname: Yup.string().required(\"Surname is required\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password is too short\"),\r\n});\r\n\r\nexport default (setErrorFromServer) => {\r\n  const [_, dispatch] = useContext(StoreContext);\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n\r\n  return useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: SignUpSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        let response = await fetch(\r\n          `${process.env.REACT_APP_SERVER_URL}/api/sign-up`,\r\n          {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.status != 200) {\r\n          throw await response.text();\r\n        }\r\n\r\n        let data = await response.json();\r\n\r\n        dispatch(\r\n          actions.generalDispatchBundler({\r\n            user: data.user,\r\n            loggedIn: true,\r\n            accessToken: data.accessToken,\r\n          })\r\n        );\r\n\r\n        history.push(query.get(\"next\"));\r\n      } catch (e) {\r\n        setErrorFromServer(\"Failed to login\");\r\n        resetForm();\r\n      }\r\n    },\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InboxWrap = styled.div`\r\n  background-color: #e9ebed;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\nexport const Inbox = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  min-width: 280px;\r\n  height: calc(100vh - 100px);\r\n  background-color: red;\r\n  margin-top: 80px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n\r\n  @media (max-width: 800px) {\r\n    height: calc(100vh - 80px);\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Profiles = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: 60px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const ProfileBox = styled.div`\r\n  border: 1px solid blue;\r\n`;\r\n\r\nexport const ChatBox = styled.div``;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HamburgerSpin } from \"react-animated-burgers\";\r\n\r\nexport const Navbar = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  padding: 10px;\r\n  display: grid;\r\n  position: fixed;\r\n  width: 100%;\r\n  grid-template-areas: \"brand nav\";\r\n  grid-template-columns: 200px auto;\r\n  justify-items: center;\r\n  background-color: white;\r\n  z-index: 2;\r\n  box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2);\r\n\r\n  box-sizing: border-box;\r\n  @media (max-width: 800px) {\r\n    padding: 10px 0px 0px 0px;\r\n    grid-template-areas:\r\n      \"brand menu\"\r\n      \"nav nav\";\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n  grid-area: nav;\r\n  background-color: white;\r\n  display: grid;\r\n  width: 100%;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 130px 120px 1fr 120px 120px;\r\n  padding-right: 20px;\r\n  @media (max-width: 800px) {\r\n    height: ${(props) =>\r\n      props.profileOpen && props.hamburgerOpen\r\n        ? \"240px\"\r\n        : props.hamburgerOpen && !props.profileOpen\r\n        ? \"160px\"\r\n        : \"0px\"};\r\n    overflow: hidden;\r\n    transition: height ease-in-out 0.6s;\r\n    grid-template-columns: none;\r\n    grid-template-rows: repeat(4, 30px);\r\n    padding-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.div`\r\n  grid-area: menu;\r\n  display: none;\r\n  @media (max-width: 800px) {\r\n    display: block;\r\n    justify-self: end;\r\n    margin-top: -8px;\r\n  }\r\n`;\r\n\r\nexport const StyledBurgerSpin = styled(HamburgerSpin)`\r\n  outline: none;\r\n`;\r\n\r\nexport const BrandLink = styled(Link)`\r\n  grid-area: brand;\r\n  font-size: 2rem;\r\n  color: #484847;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  @media (max-width: 800px) {\r\n    grid-area: brand;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const EmptyDiv = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: inherit;\r\n  color: #484847;\r\n  width: 100%;\r\n  background: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  height: 45px;\r\n  border: #484847 2px solid;\r\n  border-radius: 5px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n\r\n  @media (max-width: 800px) {\r\n    height: 35px;\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n  }\r\n`;\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ExpandIcon = styled.i`\r\n  padding-left: 8px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../InboxHeader.styles\";\r\n\r\nexport const DropdownWrapper = styled.div`\r\n  height: ${(props) => (props.profileOpen ? \"150px\" : \"0px\")};\r\n  display: grid;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 48px;\r\n  outline: none;\r\n  z-index: 2;\r\n  grid-auto-rows: 42px;\r\n  transition: height ease-in-out 0.6s;\r\n  overflow: hidden;\r\n\r\n  grid-gap: 5px;\r\n  @media (max-width: 800px) {\r\n    width: 100%;\r\n    top: 40px;\r\n    grid-auto-rows: 35px;\r\n  }\r\n`;\r\n\r\nexport const ProfileButton = styled(Button)`\r\n  @media (max-width: 800px) {\r\n    background: white;\r\n    color: #484847;\r\n\r\n    &:hover {\r\n      background-color: #28a55f;\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid rgb(20, 169, 109);\r\n  width: 120px;\r\n  height: 120px;\r\n  animation: ${spin} 2s linear infinite;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../ProfileFormHeader.styles\";\r\n\r\nexport const DropdownWrapper = styled.div`\r\n  height: ${(props) => (props.profileOpen ? \"190px\" : \"0px\")};\r\n  display: grid;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 48px;\r\n  outline: none;\r\n  z-index: 2;\r\n  grid-auto-rows: 42px;\r\n  transition: height ease-in-out 0.6s;\r\n  overflow: hidden;\r\n\r\n  grid-gap: 5px;\r\n  @media (max-width: 800px) {\r\n    width: 100%;\r\n    top: 40px;\r\n    grid-auto-rows: 35px;\r\n  }\r\n`;\r\n\r\nexport const ProfileButton = styled(Button)`\r\n  @media (max-width: 800px) {\r\n    background: white;\r\n    color: #484847;\r\n\r\n    &:hover {\r\n      background-color: #28a55f;\r\n    }\r\n  }\r\n`;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ProfileWrap = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  background-color: #eaebed;\r\n`;\r\n\r\nexport const FormWrap = styled.div`\r\n  max-width: 600px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  background-color: white;\r\n`;\r\n\r\nexport const PersonalInfoWrap = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 40px 50px 50px;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-rows: repeat(3, 50px);\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const InfoText = styled.h2`\r\n  grid-column: 1/-1;\r\n  align-self: center;\r\n`;\r\n\r\nexport const AddressWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 40px 50px 30px 50px;\r\n  grid-gap: 20px;\r\n`;\r\n\r\nexport const AddressField = styled(TextField)`\r\n  grid-column: 1/-1;\r\n`;\r\n\r\nexport const AddressInfo = styled.b`\r\n  grid-column: 1/-1;\r\n`;\r\n\r\nexport const PhotoWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-items: center;\r\n  @media (max-width: 600px) {\r\n    grid-template-rows: auto auto;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextExplanation = styled.div`\r\n  color: #66727c;\r\n`;\r\n\r\nexport const UserImage = styled.img`\r\n  object-fit: cover;\r\n  height: 200px;\r\n  @media (max-width: 600px) {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextWrap = styled.div``;\r\n\r\nexport const UploadButton = styled.input`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: #000000;\r\n`;\r\n\r\n\r\nexport const PasswordModalWrap = styled.div`\r\n  padding: 35px 10px 10px 10px;\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-rows: 2fr 2fr 2fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { StoreContext } from \"../../../store/store\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst PersonalInfoSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"First name is required\"),\r\n  surname: Yup.string().required(\"Surname is required\"),\r\n  address: Yup.string(),\r\n  state: Yup.string(),\r\n  city: Yup.string(),\r\n  zip: Yup.string().max(5),\r\n  profilePicture: Yup.mixed(),\r\n});\r\n\r\nexport default (setErrorFromServer) => {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  return useFormik({\r\n    initialValues: {\r\n      name: state.user.name,\r\n      surname: state.user.surname,\r\n      address: state.user.address || \"\",\r\n      state: state.user.state || \"\",\r\n      city: state.user.city || \"\",\r\n      zip: state.user.zip || \"\",\r\n      profilePicture: \"\",\r\n    },\r\n    validationSchema: PersonalInfoSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        const updatedProfileData = new FormData();\r\n        for (const data in values) {\r\n          values[data] != \"\" && updatedProfileData.append(data, values[data]);\r\n        }\r\n\r\n        let response = await fetch(\r\n          `${process.env.REACT_APP_SERVER_URL}/api/update-personal-info`,\r\n          {\r\n            method: \"PATCH\",\r\n            body: updatedProfileData,\r\n            headers: {\r\n              Authorization: \"Bearer \" + state.accessToken,\r\n            },\r\n          }\r\n        );\r\n        if (response.status != 200) {\r\n          throw await response.text();\r\n        }\r\n        let updatedUser = await response.json();\r\n\r\n        dispatch(\r\n          actions.generalDispatchBundler({\r\n            user: updatedUser,\r\n          })\r\n        );\r\n      } catch (e) {\r\n        setErrorFromServer(e);\r\n        resetForm();\r\n      }\r\n    },\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport const ServiceWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  grid-gap: 10px;\r\n  align-items: center;\r\n`;\r\nexport const ServiceType = styled.div``;\r\nexport const ServiceName = styled.h2``;\r\nexport const ServiceOption = styled.div`\r\n  justify-self: center;\r\n`;\r\nexport const Text = styled.h4`\r\n  color: #66727c;\r\n`;\r\nexport const RadioWrap = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\nexport const AddressWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 40px 50px 30px 50px;\r\n  grid-gap: 20px;\r\n`;\r\nexport const InfoText = styled.h2`\r\n  grid-column: 1/-1;\r\n  align-self: center;\r\n`;\r\nexport const AddressInfo = styled.b`\r\n  grid-column: 1/-1;\r\n`;\r\nexport const AddressField = styled(TextField)`\r\n  grid-column: 1/-1;\r\n`;\r\nexport const PetPreferences = styled.h2``;\r\nexport const PetPreferencesText = styled.h4`\r\n  color: #66727c;\r\n`;\r\nexport const PetPreferencesWrap = styled.div``;\r\n\r\nexport const PetPreferencesRadioWrap = styled.div``;\r\nexport const YearsOfExperienceWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  align-items: center;\r\n`;\r\nexport const YearsOfExperienceText = styled.h4`\r\n  color: #66727c;\r\n`;\r\nexport const ExperienceWrap = styled.div``;\r\nexport const PhotoWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-items: center;\r\n  @media (max-width: 600px) {\r\n    grid-template-rows: auto auto;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextExplanation = styled.div`\r\n  color: #66727c;\r\n`;\r\n\r\nexport const UserImage = styled.img`\r\n  object-fit: cover;\r\n  height: 200px;\r\n  @media (max-width: 600px) {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextWrap = styled.div``;\r\nexport const UploadButton = styled.input`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ErrorText = styled.p`\r\n  color: red;\r\n`;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div``;\r\n\r\nexport const ProfileWrap = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: grid;\r\n  justify-items: center;\r\n  background-color: #eaebed;\r\n`;\r\n\r\nexport const FormWrap = styled.div`\r\n  max-width: 700px;\r\n  margin: 75px 0px 8px 0px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  background-color: white;\r\n`;\r\n\r\nexport const TabWrap = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  background-color: white;\r\n`;\r\nexport const TabText = styled.h3`\r\n  text-align: center;\r\n  margin: 0px;\r\n  font-weight: 400;\r\n  padding-top: 8px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 0.9rem;\r\n  }\r\n  border: ${(props) => (props.selected ? `1px solid black` : `none`)};\r\n`;\r\n\r\nexport const InfoText = styled.h3`\r\n  grid-column: 1/-1;\r\n  align-self: center;\r\n`;\r\n\r\nexport const AdressWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 40px 50px 50px;\r\n  grid-gap: 20px;\r\n`;\r\n\r\nexport const AdressField = styled(TextField)`\r\n  grid-column: 1/-1;\r\n`;\r\n\r\nexport const PhotoWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 5fr 2fr;\r\n  justify-items: center;\r\n  @media (max-width: 600px) {\r\n    grid-template-rows: auto auto;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextExplanation = styled.div`\r\n  color: #66727c;\r\n`;\r\n\r\nexport const UserImage = styled.img`\r\n  width: 200px;\r\n  @media (max-width: 600px) {\r\n    margin-top: 15px;\r\n    max-width: 150px;\r\n  }\r\n`;\r\n\r\nexport const PhotoTextWrap = styled.div``;\r\n\r\nexport const UploadButton = styled.input`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n","import Landing from \"./components/Landing/Landing\";\r\nimport SearchSitter from \"./components/SearchSitter/SearchSitter\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport Inbox from \"./components/Inbox/Inbox\";\r\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\r\nimport Profile from \"./components/ProfileForm/Profile\";\r\nimport Sitter from \"./components/Sitter/Sitter\";\r\nimport * as actions from \"./store/actions\";\r\nimport * as S from \"./App.styles\";\r\nimport { StoreContext } from \"./store/store\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useEffect, useContext, useState } from \"react\";\r\n\r\nconst TwentyMinutesInMiliseconds = 20 * 60 * 1000;\r\n\r\nconst App = () => {\r\n  const [_, dispatch] = useContext(StoreContext);\r\n  const [autoLoginAttempted, setAutoLoginAttempted] = useState(false);\r\n  // Automatic login on refresh\r\n  // Also auto logging every 20 minutes to keep the session secure\r\n  useEffect(() => {\r\n    const autoLogin = async () => {\r\n      try {\r\n        let response = await fetch(\r\n          `${process.env.REACT_APP_SERVER_URL}/api/auto-login`,\r\n          {\r\n            credentials: \"include\",\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw await response.text();\r\n        }\r\n\r\n        let data = await response.json();\r\n\r\n        dispatch(\r\n          actions.generalDispatchBundler({\r\n            user: data.user,\r\n            loggedIn: true,\r\n            accessToken: data.accessToken,\r\n          })\r\n        );\r\n      } catch (e) {\r\n        //If token runs out during user session.\r\n        dispatch(\r\n          actions.generalDispatchBundler({\r\n            user: null,\r\n            loggedIn: false,\r\n            accessToken: null,\r\n          })\r\n        );\r\n      }\r\n\r\n      setAutoLoginAttempted(true);\r\n    };\r\n\r\n    autoLogin();\r\n    setInterval(autoLogin, TwentyMinutesInMiliseconds);\r\n  }, []);\r\n\r\n  return \"nig\";\r\n};\r\n\r\nexport default App;\r\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Store>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Store>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}